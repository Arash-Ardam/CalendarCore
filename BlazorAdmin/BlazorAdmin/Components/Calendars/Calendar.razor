@using CalendarDomain
@using Radzen
@using Radzen.Blazor
<h3>Calendar</h3>
@inject DialogService DialogService


<RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender style="height: 768px;" TItem="BlazorAdmin.DateEvent" Data=@_events LoadData=@LoadData StartProperty="Date" EndProperty="Date"
    TextProperty="Description" SelectedIndex="2"
    SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect AppointmentRender=@OnAppointmentRender
    AppointmentMove=@OnAppointmentMove >
    <RadzenDayView />
    <RadzenWeekView />
    <RadzenMonthView />
</RadzenScheduler>




@code {
    RadzenScheduler<BlazorAdmin.DateEvent> scheduler;

    private IEnumerable<BlazorAdmin.DateEvent> _events;



    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }
    }

    async Task LoadData(SchedulerLoadDataEventArgs? args)
    {
        
    }

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {
        if (args.View.Text != "Year")
        {
            BlazorAdmin.DateEvent data = await DialogService.OpenAsync<AddEvent>("Add Event");

            if (data != null)
            {
                //_events.Add(data);
                // Either call the Reload method or reassign the Data property of the Scheduler
                await scheduler.Reload();
            }
        }
    }
}
