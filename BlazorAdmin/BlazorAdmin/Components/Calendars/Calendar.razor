@page "/calendar"

@using CalendarDomain
@using Radzen
@using Radzen.Blazor
@inject CalendarApiService service
@rendermode InteractiveServer
<h3>Calendar</h3>
@inject DialogService DialogService


<RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender style="height: 768px;" TItem="BlazorAdmin.DateEvent" Data=@_events LoadData=@LoadData 

     SlotSelect=@OnSlotSelect >
     <RadzenYearView />
    <RadzenMonthView />
</RadzenScheduler>




@code {
    RadzenScheduler<BlazorAdmin.DateEvent> scheduler;

    private IEnumerable<BlazorAdmin.DateEvent> _events;



    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }
    }

    async Task LoadData(SchedulerLoadDataEventArgs? args)
    {
       // _events = await service.gete("DEFAULT_TRADING_SYSTEM", DateTime.Now.AddDays(-30), DateTime.Now.AddDays(30));
    }

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {

        BlazorAdmin.DateEvent data = await DialogService.OpenAsync<AddEvent>("Add Event");

            if (data != null)
            {
                var entry = new EventDto()
                    {
                        Date = data.Date,
                        Description = data.Description,
                        IsHoliday = data.IsHoliday
                    };
                await service.AddEventAsync("AtiKala", entry);
                await scheduler.Reload();
            }

    }



}
